<?php

namespace GodsDev\Backyard\Test;

use GodsDev\Backyard\BackyardTime;
use GodsDev\Backyard\BackyardError;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-06-25 at 17:57:37.
 */
class BackyardTimeTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var BackyardTime
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new BackyardTime(new BackyardError);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * @covers GodsDev\Backyard\BackyardTime::getmicrotime
     * @todo   Implement testGetmicrotime().
     */
    public function testGetmicrotime()
    {
        $this->assertTrue(is_float($this->object->getmicrotime()));
    }

    /**
     * @covers GodsDev\Backyard\BackyardTime::getRunningTime
     * @todo   Implement testGetRunningTime().
     */
    public function testGetRunningTime()
    {
        $expected = '0.0';

        $this->assertEquals($expected, substr($this->object->getRunningTime(), 0, 3));
    }

    /**
     * @covers GodsDev\Backyard\BackyardTime::pageGeneratedIn
     * @todo   Implement testPageGeneratedIn().
     */
    public function testPageGeneratedInDefault()
    {
        $expected = '0.0';

        $this->assertEquals($expected, substr($this->object->pageGeneratedIn(), 0, 3));
    }

    public function testPageGeneratedInLangString()
    {
        $langStringPageGeneratedIn = "Page Generated in %s";
        $expected = 'Page Generated in 0';

        $this->assertEquals($expected, substr($this->object->pageGeneratedIn($langStringPageGeneratedIn), 0, strlen($expected)));
    }
}
